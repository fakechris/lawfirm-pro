"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const UserProfileController_1 = require("../controllers/UserProfileController");
const auth_1 = require("../middleware/auth");
const router = (0, express_1.Router)();
router.use(auth_1.AuthMiddleware.authenticate);
router.get('/users/:userId/profile', auth_1.AuthMiddleware.requireOwnershipOrPermission('users:read', (req) => req.params.userId), UserProfileController_1.UserProfileController.getProfileByUserId);
router.get('/users/:userId/full-profile', auth_1.AuthMiddleware.requireOwnershipOrPermission('users:read', (req) => req.params.userId), UserProfileController_1.UserProfileController.getFullProfileByUserId);
router.post('/users/:userId/profile', auth_1.AuthMiddleware.requireOwnershipOrPermission('users:update', (req) => req.params.userId), UserProfileController_1.UserProfileController.createProfile);
router.put('/users/:userId/profile', auth_1.AuthMiddleware.requireOwnershipOrPermission('users:update', (req) => req.params.userId), UserProfileController_1.UserProfileController.updateProfile);
router.delete('/users/:userId/profile', auth_1.AuthMiddleware.requireOwnershipOrPermission('users:update', (req) => req.params.userId), UserProfileController_1.UserProfileController.deleteProfile);
router.get('/users/:userId/professional-info', auth_1.AuthMiddleware.requireOwnershipOrPermission('users:read', (req) => req.params.userId), UserProfileController_1.UserProfileController.getProfessionalInfo);
router.put('/users/:userId/professional-info', auth_1.AuthMiddleware.requireOwnershipOrPermission('users:update', (req) => req.params.userId), UserProfileController_1.UserProfileController.updateProfessionalInfo);
router.get('/users/:userId/contact-info', auth_1.AuthMiddleware.requireOwnershipOrPermission('users:read', (req) => req.params.userId), UserProfileController_1.UserProfileController.getContactInfo);
router.put('/users/:userId/contact-info', auth_1.AuthMiddleware.requireOwnershipOrPermission('users:update', (req) => req.params.userId), UserProfileController_1.UserProfileController.updateContactInfo);
router.get('/users/:userId/emergency-contact', auth_1.AuthMiddleware.requireOwnershipOrPermission('users:read', (req) => req.params.userId), UserProfileController_1.UserProfileController.getEmergencyContact);
router.put('/users/:userId/emergency-contact', auth_1.AuthMiddleware.requireOwnershipOrPermission('users:update', (req) => req.params.userId), UserProfileController_1.UserProfileController.updateEmergencyContact);
router.get('/users/:userId/preferences', auth_1.AuthMiddleware.requireOwnershipOrPermission('users:read', (req) => req.params.userId), UserProfileController_1.UserProfileController.getUserPreferences);
router.put('/users/:userId/preferences', auth_1.AuthMiddleware.requireOwnershipOrPermission('users:update', (req) => req.params.userId), UserProfileController_1.UserProfileController.updateUserPreferences);
router.get('/users/:userId/notifications', auth_1.AuthMiddleware.requireOwnershipOrPermission('users:read', (req) => req.params.userId), UserProfileController_1.UserProfileController.getNotificationPreferences);
router.put('/users/:userId/notifications', auth_1.AuthMiddleware.requireOwnershipOrPermission('users:update', (req) => req.params.userId), UserProfileController_1.UserProfileController.updateNotificationPreferences);
router.get('/directory', auth_1.AuthMiddleware.requirePermission('users:read'), UserProfileController_1.UserProfileController.getUserDirectory);
router.get('/search', auth_1.AuthMiddleware.requirePermission('users:read'), UserProfileController_1.UserProfileController.searchUsers);
router.get('/departments/stats', auth_1.AuthMiddleware.requirePermission('users:read'), UserProfileController_1.UserProfileController.getDepartmentStats);
router.get('/specializations/stats', auth_1.AuthMiddleware.requirePermission('users:read'), UserProfileController_1.UserProfileController.getSpecializationStats);
router.get('/departments/:department', auth_1.AuthMiddleware.requirePermission('users:read'), UserProfileController_1.UserProfileController.getProfilesByDepartment);
router.get('/specializations/:specialization', auth_1.AuthMiddleware.requirePermission('users:read'), UserProfileController_1.UserProfileController.getProfilesBySpecialization);
exports.default = router;
//# sourceMappingURL=profiles.js.map